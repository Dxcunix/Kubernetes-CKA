apiVersion: v2
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: nginx
  name: nginx
spec:
  volumes:
  # use configmap as volume mount (creates a file in container system for each key)
  - name: configmap-vol
    configMap:
      name: configmap1
  # use secret as volume mount (creates a file in the container system, for each secret)
  - name: secret-vol
    secret:
      secretName: secret1
  containers:
  - command:
    - /bin/sh
    - -c
    - "sleep 3600"
    env: # ways of using environment variables (for configurations/secrets)
    - name: DEV    # plain environment variable with value
      value: TEST
    - name: ADMIN  # environment variable reffering from a configMap object (matching with the key-var e.x ADMIN=kubernetes, the configmap is admin=kubernetes)
      valueFrom:
        configMapKeyRef: # specify the key of the secret
          name: configmap1
          key: admin
    - name: USERNAME # environment variable reffering from a secret object (USERNAME=admin, secret is username=admin)
      valueFrom:
        secretKeyRef:
          name: secret1
          key: username
    envFrom: # use configmap/secret as environment variables (takes all keys)
    - configMapRef:
        name: configmap1 # get all environment variables from the configMap as they are set in there e.x admin=kubernetes (variable)
    - secretRef:
        name: secret1  # get all environment variables from the secret as they are set in there e.x username=admin password=password
    volumeMounts:  # when used secrets,configmaps as volume, mount to desired path, a file for each key/env/secret will be created in that path in the container
    - name: secret-vol
      mountPath: /usr/temp/secrets # get the file in that location that contains the variable
    - name: configmap-vol
      mountPath: /usr/temp/configs # same for secret
    image: nginx
    name: nginx
    ports:
    - containerPort: 80
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
